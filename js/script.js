/**
 * –ü–ª–∞–≤–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ –≤–∫–∞–∑–∞–Ω–æ—ó —Å–µ–∫—Ü—ñ—ó
 * @param {string} sectionId - ID —Å–µ–∫—Ü—ñ—ó –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
 */
function scrollToSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        section.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    }
}

/**
 * –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç—É
 * @param {string} projectId - ID –ø—Ä–æ–µ–∫—Ç—É –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π
 */
function toggleDetails(projectId) {
    const detailsElement = document.getElementById(projectId + '-details');
    const button = event.target;
    
    if (!detailsElement) {
        console.error(`Element with ID ${projectId}-details not found`);
        return;
    }
    
    const isExpanded = detailsElement.classList.contains('show');
    
    if (isExpanded) {
        // –ó–≥–æ—Ä—Ç–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π
        detailsElement.classList.remove('show');
        button.classList.remove('expanded');
        button.textContent = 'MORE DETAILS';
        console.log(`üîº –î–µ—Ç–∞–ª—ñ –ø—Ä–æ–µ–∫—Ç—É ${projectId} –∑–≥–æ—Ä–Ω—É—Ç–æ`);
    } else {
        // –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π
        detailsElement.classList.add('show');
        button.classList.add('expanded');
        button.textContent = 'HIDE DETAILS';
        console.log(`üîΩ –î–µ—Ç–∞–ª—ñ –ø—Ä–æ–µ–∫—Ç—É ${projectId} —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–æ`);
        
        // –ü–ª–∞–≤–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ –¥–µ—Ç–∞–ª–µ–π —á–µ—Ä–µ–∑ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É
        setTimeout(() => {
            detailsElement.scrollIntoView({
                behavior: 'smooth',
                block: 'nearest'
            });
        }, 300);
    }
}

/**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
 * @param {HTMLElement} galleryItem - –ï–ª–µ–º–µ–Ω—Ç –≥–∞–ª–µ—Ä–µ—ó
 */
function addZoomOnClick(galleryItem) {
    const img = galleryItem.querySelector('img');
    let isPressed = false;
    let zoomTimeout;
    
    if (!img) return;
    
    // –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –º–∏—à—ñ
    galleryItem.addEventListener('mousedown', function(e) {
        e.preventDefault();
        isPressed = true;
        
        const rect = galleryItem.getBoundingClientRect();
        const x = ((e.clientX - rect.left) / rect.width) * 100;
        const y = ((e.clientY - rect.top) / rect.height) * 100;
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–æ—á–∫—É —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó
        img.style.transformOrigin = `${x}% ${y}%`;
        
        // –ü–æ—á–∏–Ω–∞—î–º–æ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É
        zoomTimeout = setTimeout(() => {
            if (isPressed) {
                img.style.transform = 'scale(1.5)';
                img.style.transition = 'transform 0.3s ease';
                galleryItem.style.zIndex = '100';
                console.log(`üîç –ó–±—ñ–ª—å—à–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ —Ç–æ—á—Ü—ñ: ${x.toFixed(1)}%, ${y.toFixed(1)}%`);
            }
        }, 200);
    });
    
    // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø—É—Å–∫–∞–Ω–Ω—è –º–∏—à—ñ
    function handleMouseUp() {
        if (isPressed) {
            isPressed = false;
            clearTimeout(zoomTimeout);
            
            img.style.transform = 'scale(1)';
            img.style.transition = 'transform 0.3s ease';
            galleryItem.style.zIndex = '';
            
            console.log('üîç –ó–±—ñ–ª—å—à–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ');
        }
    }
    
    // –°–ª—É—Ö–∞—á—ñ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤ –≤—ñ–¥–ø—É—Å–∫–∞–Ω–Ω—è
    galleryItem.addEventListener('mouseup', handleMouseUp);
    galleryItem.addEventListener('mouseleave', handleMouseUp);
    document.addEventListener('mouseup', handleMouseUp);
    
    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    img.addEventListener('dragstart', function(e) {
        e.preventDefault();
    });
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–∞–ª–µ—Ä–µ—ó
 */
function initGallery() {
    const galleryItems = document.querySelectorAll('.gallery-item');
    
    galleryItems.forEach(item => {
        // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
        addZoomOnClick(item);
    });
    
    console.log('üé® –ì–∞–ª–µ—Ä–µ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –∑ —Ñ—É–Ω–∫—Ü—ñ—î—é –∑–±—ñ–ª—å—à–µ–Ω–Ω—è');
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≥–∞–ª–µ—Ä–µ—ó
 */
function loadMoreGalleryItems() {
    const galleryGrid = document.querySelector('.gallery-grid');
    const seeMoreBtn = document.querySelector('.see-more-btn');
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≥–∞–ª–µ—Ä–µ—ó
    const additionalItems = [
        { src: './assets/img/gallery-6.jpg', alt: 'Skyscraper' },
        { src: './assets/img/gallery-7.jpg', alt: 'Modern Complex' },
        { src: './assets/img/gallery-8.jpg', alt: 'Business Center' },
        { src: './assets/img/gallery-9.jpg', alt: 'Urban Architecture' }
    ];
    
    additionalItems.forEach((item, index) => {
        const galleryItem = document.createElement('div');
        galleryItem.className = 'gallery-item';
        galleryItem.innerHTML = `
            <img src="${item.src}" alt="${item.alt}">
            <div class="gallery-zoom-overlay">
                <img src="./assets/img/bi_zoom.png" alt="Zoom" class="zoom-icon">
            </div>
        `;
        
        // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        addZoomOnClick(galleryItem);
        
        // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø–æ—è–≤–∏
        galleryItem.style.opacity = '0';
        galleryItem.style.transform = 'translateY(20px)';
        
        galleryGrid.appendChild(galleryItem);
        
        // –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏ –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
        setTimeout(() => {
            galleryItem.style.transition = 'all 0.5s ease';
            galleryItem.style.opacity = '1';
            galleryItem.style.transform = 'translateY(0)';
        }, index * 100);
    });
    
    // –•–æ–≤–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    seeMoreBtn.style.transform = 'scale(0)';
    seeMoreBtn.style.opacity = '0';
    setTimeout(() => {
        seeMoreBtn.style.display = 'none';
    }, 300);
    
    console.log('üñºÔ∏è –î–æ–¥–∞—Ç–∫–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≥–∞–ª–µ—Ä–µ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–Ω–æ–ø–æ–∫ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç—ñ–≤
 */
function initDetailsButtons() {
    const detailButtons = document.querySelectorAll('.service-btn');
    
    detailButtons.forEach(button => {
        // –î–æ–¥–∞—î–º–æ —Å—Ç—Ä—ñ–ª–∫—É –¥–æ –∫–Ω–æ–ø–∫–∏
        if (!button.textContent.includes('‚ñº') && !button.textContent.includes('‚ñ≤')) {
            button.textContent += ' ‚ñº';
        }
        
        // –î–æ–¥–∞—î–º–æ hover –µ—Ñ–µ–∫—Ç
        button.addEventListener('mouseenter', function() {
            if (!this.classList.contains('expanded')) {
                this.style.transform = 'translateY(-2px) scale(1.02)';
            }
        });
        
        button.addEventListener('mouseleave', function() {
            if (!this.classList.contains('expanded')) {
                this.style.transform = 'translateY(-2px)';
            }
        });
    });
    
    console.log('üìã –ö–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç—ñ–≤ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –∑ –∞–∫—Ç–∏–≤–Ω–∏–º–∏ —Å—Ç–∞–Ω–∞–º–∏
 */
function initNavigation() {
    const navLinks = document.querySelectorAll('.nav-menu a');
    
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            // –í–∏–¥–∞–ª—è—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ —É—Å—ñ—Ö –ø–æ—Å–∏–ª–∞–Ω—å
            navLinks.forEach(l => l.classList.remove('active'));
            
            // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –¥–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
            this.classList.add('active');
            
            // –û—Ç—Ä–∏–º—É—î–º–æ ID —Å–µ–∫—Ü—ñ—ó –∑ href
            const targetId = this.getAttribute('href').substring(1);
            
            // –ü–ª–∞–≤–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ —Å–µ–∫—Ü—ñ—ó
            if (targetId) {
                e.preventDefault();
                scrollToSection(targetId);
            }
        });
    });
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º
 */
function initSocialLinks() {
    const socialLinks = document.querySelectorAll('.social-link');
    
    socialLinks.forEach((link, index) => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const socialNames = ['Facebook', 'Twitter', 'Instagram'];
            const socialName = socialNames[index] || 'Social Media';
            
            console.log(`üîó –ö–ª—ñ–∫ –ø–æ ${socialName}`);
            
            // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ
            // window.open('https://facebook.com/monticello', '_blank');
        });
    });
}

/**
 * –ü–ª–∞–≤–Ω–µ –∑'—è–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç—Ü—ñ
 */
function initScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-in');
            }
        });
    }, observerOptions);
    
    // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∞–Ω—ñ–º—É–≤–∞—Ç–∏
    const animatedElements = document.querySelectorAll('.service-item, .news-card');
    animatedElements.forEach(el => observer.observe(el));
}

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∫–∞—Ä—Ç–∏
 */
let map = null;
let userMarker = null;

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞—Ä—Ç–∏
 */
function initMap() {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ä—Ç—É –∑ —Ü–µ–Ω—Ç—Ä–æ–º —É –ö–∏—î–≤—ñ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    map = L.map('map').setView([50.4501, 30.5234], 10);
    
    // –î–æ–¥–∞—î–º–æ —à–∞—Ä –∫–∞—Ä—Ç–∏
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '¬© OpenStreetMap contributors',
        maxZoom: 18
    }).addTo(map);
    
    console.log('üó∫Ô∏è –ö–∞—Ä—Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ–∫—Ü—ñ—ó –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è
 */
function initLocationSection() {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–∞—Ä—Ç—É –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Leaflet
    if (typeof L !== 'undefined') {
        initMap();
        console.log('üó∫Ô∏è –°–µ–∫—Ü—ñ—è –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        setTimeout(() => {
            getCurrentLocation();
        }, 500); // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∏
    } else {
        console.error('‚ùå –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ Leaflet –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞');
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
function getCurrentLocation() {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
    if (!navigator.geolocation) {
        console.error('‚ùå –ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è');
        // –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç—É –∑ —Ü–µ–Ω—Ç—Ä–æ–º —É –ö–∏—î–≤—ñ —è–∫ fallback
        if (map) {
            map.setView([50.4501, 30.5234], 10);
        }
        return;
    }
    
    console.log('üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...');
    
    // –û–ø—Ü—ñ—ó –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
    const options = {
        enableHighAccuracy: true,
        timeout: 15000,
        maximumAge: 300000
    };
    
    // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏
    navigator.geolocation.getCurrentPosition(
        function(position) {
            const lat = position.coords.latitude;
            const lng = position.coords.longitude;
            const accuracy = position.coords.accuracy;
            
            console.log(`üìç –ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–Ω–∞–π–¥–µ–Ω–æ: ${lat.toFixed(6)}, ${lng.toFixed(6)} (—Ç–æ—á–Ω—ñ—Å—Ç—å: ${accuracy}–º)`);
            
            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–∞—Ä—Ç—É
            updateMapLocation(lat, lng, accuracy);
            
            // –î–æ–¥–∞—î–º–æ –º–∞—Ä–∫–µ—Ä–∏ –Ω–∞–π–±–ª–∏–∂—á–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤
            addNearbyProjects(lat, lng);
        },
        function(error) {
            switch(error.code) {
                case error.PERMISSION_DENIED:
                    console.error('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–±–æ—Ä–æ–Ω–∏–≤ –¥–æ—Å—Ç—É–ø –¥–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó');
                    break;
                case error.POSITION_UNAVAILABLE:
                    console.error('‚ùå –ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ');
                    break;
                case error.TIMEOUT:
                    console.error('‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è');
                    break;
                default:
                    console.error('‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó:', error.message);
                    break;
            }
            
            // –ü–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç—É –∑ —Ü–µ–Ω—Ç—Ä–æ–º —É –ö–∏—î–≤—ñ —è–∫ fallback
            if (map) {
                map.setView([50.4501, 30.5234], 10);
                console.log('üó∫Ô∏è –ü–æ–∫–∞–∑–∞–Ω–æ –∫–∞—Ä—Ç—É –∑ —Ü–µ–Ω—Ç—Ä–æ–º —É –ö–∏—î–≤—ñ (fallback)');
            }
        },
        options
    );
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∑–∏—Ü—ñ—ó –Ω–∞ –∫–∞—Ä—Ç—ñ
 */
function updateMapLocation(lat, lng, accuracy) {
    if (!map) {
        console.error('‚ùå –ö–∞—Ä—Ç–∞ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
        return;
    }
    
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º–∞—Ä–∫–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (userMarker) {
        map.removeLayer(userMarker);
    }
    
    // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –º–∞—Ä–∫–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–º –ø—ñ–Ω–æ–º
    userMarker = L.marker([lat, lng], {
        icon: L.divIcon({
            className: 'user-location-marker',
            html: '<div class="user-location-pin"></div>',
            iconSize: [30, 30],
            iconAnchor: [15, 15]
        })
    }).addTo(map);
    
    // –î–æ–¥–∞—î–º–æ popup –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
    userMarker.bindPopup(`
        <div style="text-align: center; padding: 10px;">
            <strong style="color: #7E5AFF;">üìç –í–∞—à–µ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è</strong><br>
            <small style="color: #666;">–¢–æ—á–Ω—ñ—Å—Ç—å: ${Math.round(accuracy)}–º</small><br>
            <small style="color: #999; font-size: 0.8em;">–ö–ª—ñ–∫–Ω—ñ—Ç—å –Ω–∞ –ø—ñ–Ω –¥–ª—è –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó</small>
        </div>
    `).openPopup();
    
    // –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ —Ç–æ—á–Ω–æ—Å—Ç—ñ –∑ —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–º –∫–æ–ª—å–æ—Ä–æ–º
    L.circle([lat, lng], {
        radius: accuracy,
        color: '#7E5AFF',
        fillColor: '#7E5AFF',
        fillOpacity: 0.1,
        weight: 2,
        opacity: 0.6
    }).addTo(map);
    
    // –¶–µ–Ω—Ç—Ä—É—î–º–æ –∫–∞—Ä—Ç—É –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    map.setView([lat, lng], 15);
    
    console.log(`üó∫Ô∏è –ö–∞—Ä—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: ${lat}, ${lng} –∑ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–º –ø—ñ–Ω–æ–º`);
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–¥—Ä–µ—Å–∏ –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (reverse geocoding)
 */
async function getAddressFromCoordinates(lat, lng) {
    try {
        const response = await fetch(
            `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=18&addressdetails=1`
        );
        
        if (!response.ok) {
            throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∞–¥—Ä–µ—Å–∏');
        }
        
        const data = await response.json();
        
        if (data && data.display_name) {
            document.getElementById('address').textContent = 
                `–ê–¥—Ä–µ—Å–∞: ${data.display_name}`;
            console.log('üìç –ê–¥—Ä–µ—Å–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞:', data.display_name);
        } else {
            document.getElementById('address').textContent = 
                '–ê–¥—Ä–µ—Å–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏';
        }
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∞–¥—Ä–µ—Å–∏:', error);
        document.getElementById('address').textContent = 
            '–ê–¥—Ä–µ—Å–∞: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ';
    }
}

/**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–∞—Ä–∫–µ—Ä—ñ–≤ –Ω–∞–π–±–ª–∏–∂—á–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤
 */
function addNearbyProjects(userLat, userLng) {
    if (!map) return;
    
    // –ü—Ä–∏–∫–ª–∞–¥–∏ –ø—Ä–æ–µ–∫—Ç—ñ–≤
    const projects = [
        {
            name: 'Trade Center',
            lat: userLat + 0.01,
            lng: userLng + 0.01,
            description: '–°—É—á–∞—Å–Ω–∏–π —Ç–æ—Ä–≥–æ–≤–∏–π —Ü–µ–Ω—Ç—Ä'
        },
        {
            name: 'Business Complex',
            lat: userLat - 0.015,
            lng: userLng + 0.02,
            description: '–ë—ñ–∑–Ω–µ—Å-–∫–æ–º–ø–ª–µ–∫—Å –ø—Ä–µ–º—ñ—É–º –∫–ª–∞—Å—É'
        },
        {
            name: 'Residential Tower',
            lat: userLat + 0.02,
            lng: userLng - 0.01,
            description: '–ñ–∏—Ç–ª–æ–≤–∏–π –∫–æ–º–ø–ª–µ–∫—Å'
        }
    ];
    
    projects.forEach(project => {
        const distance = calculateDistance(userLat, userLng, project.lat, project.lng);
        
        const projectMarker = L.marker([project.lat, project.lng], {
            icon: L.divIcon({
                className: 'project-marker',
                html: 'üè¢',
                iconSize: [25, 25],
                iconAnchor: [12, 12]
            })
        }).addTo(map);
        
        projectMarker.bindPopup(`
            <div style="text-align: center; min-width: 150px;">
                <strong>${project.name}</strong><br>
                <small>${project.description}</small><br>
                <small style="color: #666;">–í—ñ–¥—Å—Ç–∞–Ω—å: ${distance.toFixed(1)} –∫–º</small>
            </div>
        `);
        
        console.log(`üè¢ –î–æ–¥–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç: ${project.name} (${distance.toFixed(1)} –∫–º)`);
    });
}

/**
 * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥—Å—Ç–∞–Ω—ñ –º—ñ–∂ –¥–≤–æ–º–∞ —Ç–æ—á–∫–∞–º–∏
 */
function calculateDistance(lat1, lng1, lat2, lng2) {
    const R = 6371; // –†–∞–¥—ñ—É—Å –ó–µ–º–ª—ñ –≤ –∫–º
    const dLat = (lat2 - lat1) * Math.PI / 180;
    const dLng = (lng2 - lng1) * Math.PI / 180;
    const a = 
        Math.sin(dLat/2) * Math.sin(dLat/2) +
        Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * 
        Math.sin(dLng/2) * Math.sin(dLng/2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
    return R * c;
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Monticello website loaded successfully');
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    initNavigation();
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å
    initSocialLinks();
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–Ω–æ–ø–æ–∫ –¥–µ—Ç–∞–ª–µ–π
    initDetailsButtons();
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–∞–ª–µ—Ä–µ—ó
    initGallery();
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ–∫—Ü—ñ—ó –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è
    setTimeout(initLocationSection, 100); // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Leaflet
});